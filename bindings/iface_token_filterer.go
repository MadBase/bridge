// Generated by ifacemaker. DO NOT EDIT.

package bindings

import (
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// ITokenFilterer ...
type ITokenFilterer interface {
	// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
	//
	// Solidity: event Approval(address indexed src, address indexed guy, uint256 wad)
	FilterApproval(opts *bind.FilterOpts, src []common.Address, guy []common.Address) (*TokenApprovalIterator, error)
	// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
	//
	// Solidity: event Approval(address indexed src, address indexed guy, uint256 wad)
	WatchApproval(opts *bind.WatchOpts, sink chan<- *TokenApproval, src []common.Address, guy []common.Address) (event.Subscription, error)
	// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
	//
	// Solidity: event Approval(address indexed src, address indexed guy, uint256 wad)
	ParseApproval(log types.Log) (*TokenApproval, error)
	// FilterBurn is a free log retrieval operation binding the contract event 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5.
	//
	// Solidity: event Burn(address indexed guy, uint256 wad)
	FilterBurn(opts *bind.FilterOpts, guy []common.Address) (*TokenBurnIterator, error)
	// WatchBurn is a free log subscription operation binding the contract event 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5.
	//
	// Solidity: event Burn(address indexed guy, uint256 wad)
	WatchBurn(opts *bind.WatchOpts, sink chan<- *TokenBurn, guy []common.Address) (event.Subscription, error)
	// ParseBurn is a log parse operation binding the contract event 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5.
	//
	// Solidity: event Burn(address indexed guy, uint256 wad)
	ParseBurn(log types.Log) (*TokenBurn, error)
	// FilterLogSetAuthority is a free log retrieval operation binding the contract event 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4.
	//
	// Solidity: event LogSetAuthority(address indexed authority)
	FilterLogSetAuthority(opts *bind.FilterOpts, authority []common.Address) (*TokenLogSetAuthorityIterator, error)
	// WatchLogSetAuthority is a free log subscription operation binding the contract event 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4.
	//
	// Solidity: event LogSetAuthority(address indexed authority)
	WatchLogSetAuthority(opts *bind.WatchOpts, sink chan<- *TokenLogSetAuthority, authority []common.Address) (event.Subscription, error)
	// ParseLogSetAuthority is a log parse operation binding the contract event 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4.
	//
	// Solidity: event LogSetAuthority(address indexed authority)
	ParseLogSetAuthority(log types.Log) (*TokenLogSetAuthority, error)
	// FilterLogSetOwner is a free log retrieval operation binding the contract event 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94.
	//
	// Solidity: event LogSetOwner(address indexed owner)
	FilterLogSetOwner(opts *bind.FilterOpts, owner []common.Address) (*TokenLogSetOwnerIterator, error)
	// WatchLogSetOwner is a free log subscription operation binding the contract event 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94.
	//
	// Solidity: event LogSetOwner(address indexed owner)
	WatchLogSetOwner(opts *bind.WatchOpts, sink chan<- *TokenLogSetOwner, owner []common.Address) (event.Subscription, error)
	// ParseLogSetOwner is a log parse operation binding the contract event 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94.
	//
	// Solidity: event LogSetOwner(address indexed owner)
	ParseLogSetOwner(log types.Log) (*TokenLogSetOwner, error)
	// FilterMint is a free log retrieval operation binding the contract event 0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885.
	//
	// Solidity: event Mint(address indexed guy, uint256 wad)
	FilterMint(opts *bind.FilterOpts, guy []common.Address) (*TokenMintIterator, error)
	// WatchMint is a free log subscription operation binding the contract event 0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885.
	//
	// Solidity: event Mint(address indexed guy, uint256 wad)
	WatchMint(opts *bind.WatchOpts, sink chan<- *TokenMint, guy []common.Address) (event.Subscription, error)
	// ParseMint is a log parse operation binding the contract event 0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885.
	//
	// Solidity: event Mint(address indexed guy, uint256 wad)
	ParseMint(log types.Log) (*TokenMint, error)
	// FilterStart is a free log retrieval operation binding the contract event 0x1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b.
	//
	// Solidity: event Start()
	FilterStart(opts *bind.FilterOpts) (*TokenStartIterator, error)
	// WatchStart is a free log subscription operation binding the contract event 0x1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b.
	//
	// Solidity: event Start()
	WatchStart(opts *bind.WatchOpts, sink chan<- *TokenStart) (event.Subscription, error)
	// ParseStart is a log parse operation binding the contract event 0x1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b.
	//
	// Solidity: event Start()
	ParseStart(log types.Log) (*TokenStart, error)
	// FilterStop is a free log retrieval operation binding the contract event 0xbedf0f4abfe86d4ffad593d9607fe70e83ea706033d44d24b3b6283cf3fc4f6b.
	//
	// Solidity: event Stop()
	FilterStop(opts *bind.FilterOpts) (*TokenStopIterator, error)
	// WatchStop is a free log subscription operation binding the contract event 0xbedf0f4abfe86d4ffad593d9607fe70e83ea706033d44d24b3b6283cf3fc4f6b.
	//
	// Solidity: event Stop()
	WatchStop(opts *bind.WatchOpts, sink chan<- *TokenStop) (event.Subscription, error)
	// ParseStop is a log parse operation binding the contract event 0xbedf0f4abfe86d4ffad593d9607fe70e83ea706033d44d24b3b6283cf3fc4f6b.
	//
	// Solidity: event Stop()
	ParseStop(log types.Log) (*TokenStop, error)
	// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
	//
	// Solidity: event Transfer(address indexed src, address indexed dst, uint256 wad)
	FilterTransfer(opts *bind.FilterOpts, src []common.Address, dst []common.Address) (*TokenTransferIterator, error)
	// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
	//
	// Solidity: event Transfer(address indexed src, address indexed dst, uint256 wad)
	WatchTransfer(opts *bind.WatchOpts, sink chan<- *TokenTransfer, src []common.Address, dst []common.Address) (event.Subscription, error)
	// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
	//
	// Solidity: event Transfer(address indexed src, address indexed dst, uint256 wad)
	ParseTransfer(log types.Log) (*TokenTransfer, error)
}
