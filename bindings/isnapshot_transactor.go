// Generated by ifacemaker. DO NOT EDIT.

package bindings

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// ISnapshotsTransactor ...
type ISnapshotsTransactor interface {
	// InitializeSnapshots is a paid mutator transaction binding the contract method 0x20d9a246.
	//
	// Solidity: function initializeSnapshots(address registry) returns()
	InitializeSnapshots(opts *bind.TransactOpts, registry common.Address) (*types.Transaction, error)
	// SetEpoch is a paid mutator transaction binding the contract method 0x0ceb2cef.
	//
	// Solidity: function setEpoch(uint256 ns) returns()
	SetEpoch(opts *bind.TransactOpts, ns *big.Int) (*types.Transaction, error)
	// SetMinEthSnapshotSize is a paid mutator transaction binding the contract method 0x0d81dce4.
	//
	// Solidity: function setMinEthSnapshotSize(uint256 _minSize) returns()
	SetMinEthSnapshotSize(opts *bind.TransactOpts, _minSize *big.Int) (*types.Transaction, error)
	// SetMinMadSnapshotSize is a paid mutator transaction binding the contract method 0x99e33e3d.
	//
	// Solidity: function setMinMadSnapshotSize(uint256 _minSize) returns()
	SetMinMadSnapshotSize(opts *bind.TransactOpts, _minSize *big.Int) (*types.Transaction, error)
	// SetSnapshotDesperationDelay is a paid mutator transaction binding the contract method 0xde8fa4a5.
	//
	// Solidity: function setSnapshotDesperationDelay(uint256 _minSize) returns()
	SetSnapshotDesperationDelay(opts *bind.TransactOpts, _minSize *big.Int) (*types.Transaction, error)
	// SetSnapshotDesperationFactor is a paid mutator transaction binding the contract method 0xeb157064.
	//
	// Solidity: function setSnapshotDesperationFactor(uint256 _minSize) returns()
	SetSnapshotDesperationFactor(opts *bind.TransactOpts, _minSize *big.Int) (*types.Transaction, error)
	// Snapshot is a paid mutator transaction binding the contract method 0x08ca1f25.
	//
	// Solidity: function snapshot(bytes _signatureGroup, bytes _bclaims) returns(bool)
	Snapshot(opts *bind.TransactOpts, _signatureGroup []byte, _bclaims []byte) (*types.Transaction, error)
}
