// Generated by ifacemaker. DO NOT EDIT.

package bindings

import (
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// IAccusationFilterer ...
type IAccusationFilterer interface {
	// FilterInvalidTransactionConsumption is a free log retrieval operation binding the contract event 0xe7d88c5a1b3de74710b2ce1551a3d3be5c537d9d526cf4cb0fbbc948f527ee8b.
	//
	// Solidity: event InvalidTransactionConsumption(address indexed validator)
	FilterInvalidTransactionConsumption(opts *bind.FilterOpts, validator []common.Address) (*AccusationInvalidTransactionConsumptionIterator, error)
	// WatchInvalidTransactionConsumption is a free log subscription operation binding the contract event 0xe7d88c5a1b3de74710b2ce1551a3d3be5c537d9d526cf4cb0fbbc948f527ee8b.
	//
	// Solidity: event InvalidTransactionConsumption(address indexed validator)
	WatchInvalidTransactionConsumption(opts *bind.WatchOpts, sink chan<- *AccusationInvalidTransactionConsumption, validator []common.Address) (event.Subscription, error)
	// ParseInvalidTransactionConsumption is a log parse operation binding the contract event 0xe7d88c5a1b3de74710b2ce1551a3d3be5c537d9d526cf4cb0fbbc948f527ee8b.
	//
	// Solidity: event InvalidTransactionConsumption(address indexed validator)
	ParseInvalidTransactionConsumption(log types.Log) (*AccusationInvalidTransactionConsumption, error)
	// FilterMultipleProposals is a free log retrieval operation binding the contract event 0xd70587ff450b3f9f38dcd0b8de705c37a9039a6d820906da412205e9f65c4138.
	//
	// Solidity: event MultipleProposals(address indexed validator)
	FilterMultipleProposals(opts *bind.FilterOpts, validator []common.Address) (*AccusationMultipleProposalsIterator, error)
	// WatchMultipleProposals is a free log subscription operation binding the contract event 0xd70587ff450b3f9f38dcd0b8de705c37a9039a6d820906da412205e9f65c4138.
	//
	// Solidity: event MultipleProposals(address indexed validator)
	WatchMultipleProposals(opts *bind.WatchOpts, sink chan<- *AccusationMultipleProposals, validator []common.Address) (event.Subscription, error)
	// ParseMultipleProposals is a log parse operation binding the contract event 0xd70587ff450b3f9f38dcd0b8de705c37a9039a6d820906da412205e9f65c4138.
	//
	// Solidity: event MultipleProposals(address indexed validator)
	ParseMultipleProposals(log types.Log) (*AccusationMultipleProposals, error)
}
