// Generated by ifacemaker. DO NOT EDIT.

package bindings

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// IValidatorsFilterer ...
type IValidatorsFilterer interface {
	// FilterBurntStake is a free log retrieval operation binding the contract event 0x54420ac6a7570cfba30d2f88982f0749811f67103de3a63ad8b82cb754e8680e.
	//
	// Solidity: event BurntStake(address indexed who, uint256 amount)
	FilterBurntStake(opts *bind.FilterOpts, who []common.Address) (*ValidatorsBurntStakeIterator, error)
	// WatchBurntStake is a free log subscription operation binding the contract event 0x54420ac6a7570cfba30d2f88982f0749811f67103de3a63ad8b82cb754e8680e.
	//
	// Solidity: event BurntStake(address indexed who, uint256 amount)
	WatchBurntStake(opts *bind.WatchOpts, sink chan<- *ValidatorsBurntStake, who []common.Address) (event.Subscription, error)
	// ParseBurntStake is a log parse operation binding the contract event 0x54420ac6a7570cfba30d2f88982f0749811f67103de3a63ad8b82cb754e8680e.
	//
	// Solidity: event BurntStake(address indexed who, uint256 amount)
	ParseBurntStake(log types.Log) (*ValidatorsBurntStake, error)
	// FilterFined is a free log retrieval operation binding the contract event 0xf1254bf6cf04a475bd832353c2ccfc5e0d89e7b9c0f05a153ff897b6121b91e9.
	//
	// Solidity: event Fined(address indexed who, bytes32 why, uint256 amount)
	FilterFined(opts *bind.FilterOpts, who []common.Address) (*ValidatorsFinedIterator, error)
	// WatchFined is a free log subscription operation binding the contract event 0xf1254bf6cf04a475bd832353c2ccfc5e0d89e7b9c0f05a153ff897b6121b91e9.
	//
	// Solidity: event Fined(address indexed who, bytes32 why, uint256 amount)
	WatchFined(opts *bind.WatchOpts, sink chan<- *ValidatorsFined, who []common.Address) (event.Subscription, error)
	// ParseFined is a log parse operation binding the contract event 0xf1254bf6cf04a475bd832353c2ccfc5e0d89e7b9c0f05a153ff897b6121b91e9.
	//
	// Solidity: event Fined(address indexed who, bytes32 why, uint256 amount)
	ParseFined(log types.Log) (*ValidatorsFined, error)
	// FilterKeyShareSubmission is a free log retrieval operation binding the contract event 0xb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc.
	//
	// Solidity: event KeyShareSubmission(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2)
	FilterKeyShareSubmission(opts *bind.FilterOpts) (*ValidatorsKeyShareSubmissionIterator, error)
	// WatchKeyShareSubmission is a free log subscription operation binding the contract event 0xb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc.
	//
	// Solidity: event KeyShareSubmission(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2)
	WatchKeyShareSubmission(opts *bind.WatchOpts, sink chan<- *ValidatorsKeyShareSubmission) (event.Subscription, error)
	// ParseKeyShareSubmission is a log parse operation binding the contract event 0xb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc.
	//
	// Solidity: event KeyShareSubmission(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2)
	ParseKeyShareSubmission(log types.Log) (*ValidatorsKeyShareSubmission, error)
	// FilterLockedReward is a free log retrieval operation binding the contract event 0x28dc9c0ffa672df041cad84edbee41508284600c9394bda0f8586d012c5e0915.
	//
	// Solidity: event LockedReward(address indexed who, uint256 amount)
	FilterLockedReward(opts *bind.FilterOpts, who []common.Address) (*ValidatorsLockedRewardIterator, error)
	// WatchLockedReward is a free log subscription operation binding the contract event 0x28dc9c0ffa672df041cad84edbee41508284600c9394bda0f8586d012c5e0915.
	//
	// Solidity: event LockedReward(address indexed who, uint256 amount)
	WatchLockedReward(opts *bind.WatchOpts, sink chan<- *ValidatorsLockedReward, who []common.Address) (event.Subscription, error)
	// ParseLockedReward is a log parse operation binding the contract event 0x28dc9c0ffa672df041cad84edbee41508284600c9394bda0f8586d012c5e0915.
	//
	// Solidity: event LockedReward(address indexed who, uint256 amount)
	ParseLockedReward(log types.Log) (*ValidatorsLockedReward, error)
	// FilterLockedStake is a free log retrieval operation binding the contract event 0x1de2f07b0a1c69916a8b25b889051644192307ea08444a2e11f8654d1db3ab0c.
	//
	// Solidity: event LockedStake(address indexed who, uint256 amount)
	FilterLockedStake(opts *bind.FilterOpts, who []common.Address) (*ValidatorsLockedStakeIterator, error)
	// WatchLockedStake is a free log subscription operation binding the contract event 0x1de2f07b0a1c69916a8b25b889051644192307ea08444a2e11f8654d1db3ab0c.
	//
	// Solidity: event LockedStake(address indexed who, uint256 amount)
	WatchLockedStake(opts *bind.WatchOpts, sink chan<- *ValidatorsLockedStake, who []common.Address) (event.Subscription, error)
	// ParseLockedStake is a log parse operation binding the contract event 0x1de2f07b0a1c69916a8b25b889051644192307ea08444a2e11f8654d1db3ab0c.
	//
	// Solidity: event LockedStake(address indexed who, uint256 amount)
	ParseLockedStake(log types.Log) (*ValidatorsLockedStake, error)
	// FilterRegistrationOpen is a free log retrieval operation binding the contract event 0x9c6f8368fe7e77e8cb9438744581403bcb3f53298e517f04c1b8475487402e97.
	//
	// Solidity: event RegistrationOpen(uint256 dkgStarts, uint256 registrationEnds, uint256 shareDistributionEnds, uint256 disputeEnds, uint256 keyShareSubmissionEnds, uint256 mpkSubmissionEnds, uint256 gpkjSubmissionEnds, uint256 gpkjDisputeEnds, uint256 dkgComplete)
	FilterRegistrationOpen(opts *bind.FilterOpts) (*ValidatorsRegistrationOpenIterator, error)
	// WatchRegistrationOpen is a free log subscription operation binding the contract event 0x9c6f8368fe7e77e8cb9438744581403bcb3f53298e517f04c1b8475487402e97.
	//
	// Solidity: event RegistrationOpen(uint256 dkgStarts, uint256 registrationEnds, uint256 shareDistributionEnds, uint256 disputeEnds, uint256 keyShareSubmissionEnds, uint256 mpkSubmissionEnds, uint256 gpkjSubmissionEnds, uint256 gpkjDisputeEnds, uint256 dkgComplete)
	WatchRegistrationOpen(opts *bind.WatchOpts, sink chan<- *ValidatorsRegistrationOpen) (event.Subscription, error)
	// ParseRegistrationOpen is a log parse operation binding the contract event 0x9c6f8368fe7e77e8cb9438744581403bcb3f53298e517f04c1b8475487402e97.
	//
	// Solidity: event RegistrationOpen(uint256 dkgStarts, uint256 registrationEnds, uint256 shareDistributionEnds, uint256 disputeEnds, uint256 keyShareSubmissionEnds, uint256 mpkSubmissionEnds, uint256 gpkjSubmissionEnds, uint256 gpkjDisputeEnds, uint256 dkgComplete)
	ParseRegistrationOpen(log types.Log) (*ValidatorsRegistrationOpen, error)
	// FilterRequestedUnlockStake is a free log retrieval operation binding the contract event 0x1fde0d8a6620647f5c7b5632a87b23101ba553c9b474caf1134fb24d92bf6ddc.
	//
	// Solidity: event RequestedUnlockStake(address indexed who)
	FilterRequestedUnlockStake(opts *bind.FilterOpts, who []common.Address) (*ValidatorsRequestedUnlockStakeIterator, error)
	// WatchRequestedUnlockStake is a free log subscription operation binding the contract event 0x1fde0d8a6620647f5c7b5632a87b23101ba553c9b474caf1134fb24d92bf6ddc.
	//
	// Solidity: event RequestedUnlockStake(address indexed who)
	WatchRequestedUnlockStake(opts *bind.WatchOpts, sink chan<- *ValidatorsRequestedUnlockStake, who []common.Address) (event.Subscription, error)
	// ParseRequestedUnlockStake is a log parse operation binding the contract event 0x1fde0d8a6620647f5c7b5632a87b23101ba553c9b474caf1134fb24d92bf6ddc.
	//
	// Solidity: event RequestedUnlockStake(address indexed who)
	ParseRequestedUnlockStake(log types.Log) (*ValidatorsRequestedUnlockStake, error)
	// FilterShareDistribution is a free log retrieval operation binding the contract event 0xa84d294194d6169652a99150fd2ef10e18b0d2caa10beeea237bbddcc6e22b10.
	//
	// Solidity: event ShareDistribution(address issuer, uint256 index, uint256[] encrypted_shares, uint256[2][] commitments)
	FilterShareDistribution(opts *bind.FilterOpts) (*ValidatorsShareDistributionIterator, error)
	// WatchShareDistribution is a free log subscription operation binding the contract event 0xa84d294194d6169652a99150fd2ef10e18b0d2caa10beeea237bbddcc6e22b10.
	//
	// Solidity: event ShareDistribution(address issuer, uint256 index, uint256[] encrypted_shares, uint256[2][] commitments)
	WatchShareDistribution(opts *bind.WatchOpts, sink chan<- *ValidatorsShareDistribution) (event.Subscription, error)
	// ParseShareDistribution is a log parse operation binding the contract event 0xa84d294194d6169652a99150fd2ef10e18b0d2caa10beeea237bbddcc6e22b10.
	//
	// Solidity: event ShareDistribution(address issuer, uint256 index, uint256[] encrypted_shares, uint256[2][] commitments)
	ParseShareDistribution(log types.Log) (*ValidatorsShareDistribution, error)
	// FilterSnapshotTaken is a free log retrieval operation binding the contract event 0x6d438b6b835d16cdae6efdc0259fdfba17e6aa32dae81863a2467866f85f724a.
	//
	// Solidity: event SnapshotTaken(uint32 chainId, uint256 indexed epoch, uint32 height, address indexed validator, bool startingETHDKG)
	FilterSnapshotTaken(opts *bind.FilterOpts, epoch []*big.Int, validator []common.Address) (*ValidatorsSnapshotTakenIterator, error)
	// WatchSnapshotTaken is a free log subscription operation binding the contract event 0x6d438b6b835d16cdae6efdc0259fdfba17e6aa32dae81863a2467866f85f724a.
	//
	// Solidity: event SnapshotTaken(uint32 chainId, uint256 indexed epoch, uint32 height, address indexed validator, bool startingETHDKG)
	WatchSnapshotTaken(opts *bind.WatchOpts, sink chan<- *ValidatorsSnapshotTaken, epoch []*big.Int, validator []common.Address) (event.Subscription, error)
	// ParseSnapshotTaken is a log parse operation binding the contract event 0x6d438b6b835d16cdae6efdc0259fdfba17e6aa32dae81863a2467866f85f724a.
	//
	// Solidity: event SnapshotTaken(uint32 chainId, uint256 indexed epoch, uint32 height, address indexed validator, bool startingETHDKG)
	ParseSnapshotTaken(log types.Log) (*ValidatorsSnapshotTaken, error)
	// FilterUnlockedReward is a free log retrieval operation binding the contract event 0x496a1c9a1a9ac29d87ecb4e563683ebd0ee80798869f36c86175059eb5dc7304.
	//
	// Solidity: event UnlockedReward(address indexed who, uint256 amount)
	FilterUnlockedReward(opts *bind.FilterOpts, who []common.Address) (*ValidatorsUnlockedRewardIterator, error)
	// WatchUnlockedReward is a free log subscription operation binding the contract event 0x496a1c9a1a9ac29d87ecb4e563683ebd0ee80798869f36c86175059eb5dc7304.
	//
	// Solidity: event UnlockedReward(address indexed who, uint256 amount)
	WatchUnlockedReward(opts *bind.WatchOpts, sink chan<- *ValidatorsUnlockedReward, who []common.Address) (event.Subscription, error)
	// ParseUnlockedReward is a log parse operation binding the contract event 0x496a1c9a1a9ac29d87ecb4e563683ebd0ee80798869f36c86175059eb5dc7304.
	//
	// Solidity: event UnlockedReward(address indexed who, uint256 amount)
	ParseUnlockedReward(log types.Log) (*ValidatorsUnlockedReward, error)
	// FilterUnlockedStake is a free log retrieval operation binding the contract event 0x252a696583e35c4d61332829d3bb2a8236f2500140258f089951799c9b999a9c.
	//
	// Solidity: event UnlockedStake(address indexed who, uint256 amount)
	FilterUnlockedStake(opts *bind.FilterOpts, who []common.Address) (*ValidatorsUnlockedStakeIterator, error)
	// WatchUnlockedStake is a free log subscription operation binding the contract event 0x252a696583e35c4d61332829d3bb2a8236f2500140258f089951799c9b999a9c.
	//
	// Solidity: event UnlockedStake(address indexed who, uint256 amount)
	WatchUnlockedStake(opts *bind.WatchOpts, sink chan<- *ValidatorsUnlockedStake, who []common.Address) (event.Subscription, error)
	// ParseUnlockedStake is a log parse operation binding the contract event 0x252a696583e35c4d61332829d3bb2a8236f2500140258f089951799c9b999a9c.
	//
	// Solidity: event UnlockedStake(address indexed who, uint256 amount)
	ParseUnlockedStake(log types.Log) (*ValidatorsUnlockedStake, error)
	// FilterValidatorCreated is a free log retrieval operation binding the contract event 0xef5e89a9416c26e0a0a37c1f630958c8c88d9efad59f553f94cff0bed0a268d3.
	//
	// Solidity: event ValidatorCreated(address indexed validator, address indexed signer, uint256[2] madID)
	FilterValidatorCreated(opts *bind.FilterOpts, validator []common.Address, signer []common.Address) (*ValidatorsValidatorCreatedIterator, error)
	// WatchValidatorCreated is a free log subscription operation binding the contract event 0xef5e89a9416c26e0a0a37c1f630958c8c88d9efad59f553f94cff0bed0a268d3.
	//
	// Solidity: event ValidatorCreated(address indexed validator, address indexed signer, uint256[2] madID)
	WatchValidatorCreated(opts *bind.WatchOpts, sink chan<- *ValidatorsValidatorCreated, validator []common.Address, signer []common.Address) (event.Subscription, error)
	// ParseValidatorCreated is a log parse operation binding the contract event 0xef5e89a9416c26e0a0a37c1f630958c8c88d9efad59f553f94cff0bed0a268d3.
	//
	// Solidity: event ValidatorCreated(address indexed validator, address indexed signer, uint256[2] madID)
	ParseValidatorCreated(log types.Log) (*ValidatorsValidatorCreated, error)
	// FilterValidatorJoined is a free log retrieval operation binding the contract event 0x8c25e214c5693ebaf8008875bacedeb9e0aafd393864a314ed1801b2a4e13dd9.
	//
	// Solidity: event ValidatorJoined(address indexed validator, uint256[2] madID)
	FilterValidatorJoined(opts *bind.FilterOpts, validator []common.Address) (*ValidatorsValidatorJoinedIterator, error)
	// WatchValidatorJoined is a free log subscription operation binding the contract event 0x8c25e214c5693ebaf8008875bacedeb9e0aafd393864a314ed1801b2a4e13dd9.
	//
	// Solidity: event ValidatorJoined(address indexed validator, uint256[2] madID)
	WatchValidatorJoined(opts *bind.WatchOpts, sink chan<- *ValidatorsValidatorJoined, validator []common.Address) (event.Subscription, error)
	// ParseValidatorJoined is a log parse operation binding the contract event 0x8c25e214c5693ebaf8008875bacedeb9e0aafd393864a314ed1801b2a4e13dd9.
	//
	// Solidity: event ValidatorJoined(address indexed validator, uint256[2] madID)
	ParseValidatorJoined(log types.Log) (*ValidatorsValidatorJoined, error)
	// FilterValidatorLeft is a free log retrieval operation binding the contract event 0x319bbadb03b94aedc69babb34a28675536a9cb30f4bbde343e1d0018c44ebd94.
	//
	// Solidity: event ValidatorLeft(address indexed validator, uint256[2] pkHash)
	FilterValidatorLeft(opts *bind.FilterOpts, validator []common.Address) (*ValidatorsValidatorLeftIterator, error)
	// WatchValidatorLeft is a free log subscription operation binding the contract event 0x319bbadb03b94aedc69babb34a28675536a9cb30f4bbde343e1d0018c44ebd94.
	//
	// Solidity: event ValidatorLeft(address indexed validator, uint256[2] pkHash)
	WatchValidatorLeft(opts *bind.WatchOpts, sink chan<- *ValidatorsValidatorLeft, validator []common.Address) (event.Subscription, error)
	// ParseValidatorLeft is a log parse operation binding the contract event 0x319bbadb03b94aedc69babb34a28675536a9cb30f4bbde343e1d0018c44ebd94.
	//
	// Solidity: event ValidatorLeft(address indexed validator, uint256[2] pkHash)
	ParseValidatorLeft(log types.Log) (*ValidatorsValidatorLeft, error)
	// FilterValidatorMember is a free log retrieval operation binding the contract event 0x113b129fac2dde341b9fbbec2bb79a95b9945b0e80fda711fc8ae5c7b0ea83b0.
	//
	// Solidity: event ValidatorMember(address account, uint256 epoch, uint256 index, uint256 share0, uint256 share1, uint256 share2, uint256 share3)
	FilterValidatorMember(opts *bind.FilterOpts) (*ValidatorsValidatorMemberIterator, error)
	// WatchValidatorMember is a free log subscription operation binding the contract event 0x113b129fac2dde341b9fbbec2bb79a95b9945b0e80fda711fc8ae5c7b0ea83b0.
	//
	// Solidity: event ValidatorMember(address account, uint256 epoch, uint256 index, uint256 share0, uint256 share1, uint256 share2, uint256 share3)
	WatchValidatorMember(opts *bind.WatchOpts, sink chan<- *ValidatorsValidatorMember) (event.Subscription, error)
	// ParseValidatorMember is a log parse operation binding the contract event 0x113b129fac2dde341b9fbbec2bb79a95b9945b0e80fda711fc8ae5c7b0ea83b0.
	//
	// Solidity: event ValidatorMember(address account, uint256 epoch, uint256 index, uint256 share0, uint256 share1, uint256 share2, uint256 share3)
	ParseValidatorMember(log types.Log) (*ValidatorsValidatorMember, error)
	// FilterValidatorQueued is a free log retrieval operation binding the contract event 0xb4389eb1c66b46169245bc8c147e4b13a2b88adcaa44d001b0fadf25890b773d.
	//
	// Solidity: event ValidatorQueued(address indexed validator, uint256[2] pkHash)
	FilterValidatorQueued(opts *bind.FilterOpts, validator []common.Address) (*ValidatorsValidatorQueuedIterator, error)
	// WatchValidatorQueued is a free log subscription operation binding the contract event 0xb4389eb1c66b46169245bc8c147e4b13a2b88adcaa44d001b0fadf25890b773d.
	//
	// Solidity: event ValidatorQueued(address indexed validator, uint256[2] pkHash)
	WatchValidatorQueued(opts *bind.WatchOpts, sink chan<- *ValidatorsValidatorQueued, validator []common.Address) (event.Subscription, error)
	// ParseValidatorQueued is a log parse operation binding the contract event 0xb4389eb1c66b46169245bc8c147e4b13a2b88adcaa44d001b0fadf25890b773d.
	//
	// Solidity: event ValidatorQueued(address indexed validator, uint256[2] pkHash)
	ParseValidatorQueued(log types.Log) (*ValidatorsValidatorQueued, error)
	// FilterValidatorSet is a free log retrieval operation binding the contract event 0x1c85ff1efe0a905f8feca811e617102cb7ec896aded693eb96366c8ef22bb09f.
	//
	// Solidity: event ValidatorSet(uint8 validatorCount, uint256 epoch, uint32 ethHeight, uint32 madHeight, uint256 groupKey0, uint256 groupKey1, uint256 groupKey2, uint256 groupKey3)
	FilterValidatorSet(opts *bind.FilterOpts) (*ValidatorsValidatorSetIterator, error)
	// WatchValidatorSet is a free log subscription operation binding the contract event 0x1c85ff1efe0a905f8feca811e617102cb7ec896aded693eb96366c8ef22bb09f.
	//
	// Solidity: event ValidatorSet(uint8 validatorCount, uint256 epoch, uint32 ethHeight, uint32 madHeight, uint256 groupKey0, uint256 groupKey1, uint256 groupKey2, uint256 groupKey3)
	WatchValidatorSet(opts *bind.WatchOpts, sink chan<- *ValidatorsValidatorSet) (event.Subscription, error)
	// ParseValidatorSet is a log parse operation binding the contract event 0x1c85ff1efe0a905f8feca811e617102cb7ec896aded693eb96366c8ef22bb09f.
	//
	// Solidity: event ValidatorSet(uint8 validatorCount, uint256 epoch, uint32 ethHeight, uint32 madHeight, uint256 groupKey0, uint256 groupKey1, uint256 groupKey2, uint256 groupKey3)
	ParseValidatorSet(log types.Log) (*ValidatorsValidatorSet, error)
}
